<?php

/**
 * Copyright Â© 2016-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */

namespace SprykerSdk\Sniffs\Commenting;

use PHP_CodeSniffer\Files\File;
use Spryker\Sniffs\Commenting\DocBlockTestGroupAnnotation2Sniff;

class TestGroupDocBlockSniff extends DocBlockTestGroupAnnotation2Sniff
{
    /**
     * @inheritDoc
     */
    public function process(File $phpCsFile, $stackPointer): void
    {
        $filename = $phpCsFile->getFilename();

        preg_match('#/tests/(.+)(Test|Cest).php$#', $filename, $matches);
        if (!$matches) {
            return;
        }

        $namespaceParts = $this->getNamespaceParts($phpCsFile, $stackPointer);
        unset($namespaceParts[array_search( 'SprykerSdk', $namespaceParts)]);

        if (!$namespaceParts) {
            return;
        }

        $givenAnnotations = $this->getAnnotations($phpCsFile, $stackPointer);
        $expectedAnnotations = $this->getExpectedAnnotations($phpCsFile, $namespaceParts);

        if ($this->containsExpectedGroupAnnotations($givenAnnotations, $expectedAnnotations)) {
            return;
        }

        $endAutoGeneratedAnnotationsPosition = array_search(static::ANNOTATION_END_TEXT, $givenAnnotations, true);
        if ($endAutoGeneratedAnnotationsPosition && count($givenAnnotations) > count($expectedAnnotations)) {
            $additionalAnnotations = array_slice($givenAnnotations, $endAutoGeneratedAnnotationsPosition + 1);
            $expectedAnnotations = array_merge($expectedAnnotations, $additionalAnnotations);
        }

        $this->fixGroupAnnotation($phpCsFile, $stackPointer, $expectedAnnotations);
    }
}
